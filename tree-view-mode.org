#+date: $Date: 2025-05-17 07:43:43+09 $
#+title: tree-view-mode
#+author: fubuki
* tree-view-mode.el
  拙作 tree.el によって表示したディレクトリ・ツリーを折り畳んで表示できるメジャーモードです.

* インストール
  tree.el と tree-view-mode.el を load-path の通ったディレクトリに置き init.el 等に以下を加えます.

  : (require 'tree-view-mode)

* 基本的な使い方 
  起動してプロンプトからディレクトリ名を入力すると、
  ディレクトリツリーが折り畳まれた状態で表示され表のような操作ができます.

  : M-x tree

  TAB を叩いていくと次々にディレクトリの中を見ていけます.

| space or n                   | 次の行                                                                                           |
| BS or p                      | 前の行                                                                                           |
| =<=                          | 前のディレクトリ                                                                                 |
| =>=                          | 次のディレクトリ                                                                                 |
| s                            | ポイントのあるディレクトリを開く                                                                 |
| h                            | ポイントのあるディレクトリを閉じる                                                               |
| i                            | ポイントのあるディレクトリを開閉する                                                             |
| TAB                          | ディレクトリを開閉し次の行へ                                                                     |
| S-TAB                        | TAB のほぼ逆方向動作                                                                             |
| C-c C-s                      | ポイントのディレクトリの枝をすべて開く                                                           |
| C-c C-h                      | ポイントのあるディレクトリ以外すべて閉じる                                                       |
| S                            | すべてのディレクトリを開く                                                                       |
| H                            | すべてのディレクトリを閉じる                                                                     |
| w                            | ポイントのファイル名をキルリングにコピー(prefix でフルパス)                                      |
| M-x tree-buffer-to-list-file | 現在バッファ表示しているツリーをデータとしてセーブ[fn:: 表示されている情報だけを使うので、既存ディレクトリなら tree-list-write を使った方が正確な stat も保存されるのでいいです。] |

* tree.el 側でのカスタマイズ
  -- User Option: tree-options

  必要なシンボルをリストでセットしておくと、
  その機能がアクティブになります.
  3列目は eshell からの起動時オプションで対応するキャラクタです.

  | size  | ファイルサイズの表示 | s |
  | date  | タイムスタンプの表示 | d |
  | quote | ファイル名をクォート | Q |
  | dir   | ディレクトリオンリー | D |

: (setq tree-options '(size date quote))

  -- User Option: tree-sort-function
  
  ソート秩序を規定する関数.
  比較するふたつのファイル名を受け取る関数を指定します.
  nil だとソートされません.
  デフォルトは 辞書順でソートされます.
  | nil                           | Sort なし                |
  | tree-string-lessp             | 辞書順 (Default)         |
  | tree-without-definite-article | 頭の "The " を無視       |
  | FUNCTION                      | 引数ふたつを比較する関数 |
  
  -- User Option: tree-file-name-deco

  ファイル名表示に使われる 2つの引数を持つ関数.
  ファイル名とそのディレクトリ名を引数に持ち、
  戻り文字列をファイル名を表示する位置に表示します.
  nil ならファイル名がそのまま表示されます.

  この中で quote option の処理をしているので
  自前の関数でも必要な場合、関数中で `tree-quote-file-name' を呼ぶ等してください.
  
  末尾にビットレート表示を追加する拡張[fn:: 拙作 [[https://gist.github.com/s-fubuki/c782dc86f2707517850f910266a2de1e][btree.el]] と、他に [[https://github.com/s-fubuki/wtag][wtag package]] が要ります)]が欲しくなり
  追加した変数なので用途はあまり無いかもしれません.

* eshell について
  eshell からも tree と起動して使えるようにしてあります.
  オプションは tree -sd  のように通常のシェルコマンド風に指定します.

  eshell から起動するときは `tree-eshell-options' の値をデフォルトのオプションで使います.
  デフォルトではこの変数に `tree-options' の値がそのままセットされます.

* tree のデータ化やコンバート等
** DIR のツリーをリスト FILE にする
 -- Command: tree-list-write dir file

** ツリー TEXT を リスト FILE にする
 -- Command: tree-text-to-list-file text file

** ツリー・リストのデータ FILE をツリーとしてバッファに表示
 -- Command: tree-buffer-display FILE

** dired でポイントしているツリー・リスト・ファイルから REGEXP をサーチ
 -- Command: dired-tree-search regexp

* もっさり
** tree-view-mode: 巨大なファイルだと重いです
  Overlay で折り畳みしていますが、
  Directory の数だけ Overlay を作るので
  2万ディレクトリくらいある tree file のように、
  あまりに Directory が多いと生成時間に加えバッファ操作も重くなり動作に現れます.
  ですが、しばらく操作を続けていると普通に動くようになってきます.
  よくわかりませんが Emacs が内部で Overlay 検索の最適化をするのかもしれません.

  データベース用に書き出した巨大 tree file 等は tree.el の中の
  折り畳みしない軽い `easy-tree-vew-mode' を使用しています.

** ツリー・テキストをスキャンしてリスト化する場合
   空のディレクトリの場合ディレクトリとして認識ができずファイルになってしまいます.

* テスト環境
  1. GNU Emacs 28.1 (build 2, x86_64-w64-mingw32) of 2022-04-22
  1. GNU Emacs 29.0.50 (build 1, x86_64-w64-mingw32) of 2022-04-03
  1. GNU Emacs 30.0.50 (build 1, x86_64-w64-mingw32) of 2023-04-16

* CHANGES
** tree.el: 1.64
*** add: `tree-buffer-display-hook'.

# Local Variables:
# mode: org
# buffer-read-only: t
# End:
